#
# Copyright (C) 2016+ AzerothCore <www.azerothcore.org>, released under GNU AGPL v3 license
#
# DarkChaos Hotspots System Configuration
#

###################################################################################################
# HOTSPOTS SYSTEM SETTINGS
###################################################################################################

#
#    Hotspots.Enable
#        Description: Enable the Hotspots system (random XP bonus zones)
#        Default:     1 (Enabled)
#                     0 (Disabled)

Hotspots.Enable = 1

#
#    Hotspots.Duration
#        Description: How long each hotspot lasts (in minutes)
#        Default:     60 (1 hour)

Hotspots.Duration = 60

#
#    Hotspots.ExperienceBonus
#        Description: Experience bonus percentage when in a hotspot
#        Default:     100 (double XP)

Hotspots.ExperienceBonus = 100

#
#    Hotspots.Radius
#        Description: Radius of each hotspot (in yards)
#        Default:     150.0

Hotspots.Radius = 150.0

#
#    Hotspots.MaxActive
#        Description: Maximum number of active hotspots at once
#        Default:     5

Hotspots.MaxActive = 5

#
#    Hotspots.RespawnDelay
#        Description: Delay between hotspot spawns (in minutes)
#        Default:     30

Hotspots.RespawnDelay = 30

#
#    Hotspots.InitialPopulateCount
#        Description: Number of hotspots to spawn immediately on server start.
#                     0 = populate up to Hotspots.MaxActive (default behavior)
#        Default:     0

Hotspots.InitialPopulateCount = 0

#
#    Hotspots.AuraSpell
#        Description: DEPRECATED - No longer used. Visual effect is now from BuffSpell.
#                     Kept for backward compatibility only.
#        Default:     800001

Hotspots.AuraSpell = 800001

#
#    Hotspots.BuffSpell
#        Description: Buff spell ID that serves as both visual effect AND XP bonus handler
#                     - Shows as buff icon in player's buff bar
#                     - Has aura script in spell_hotspot_buff_800001.cpp
#                     - Triggers XP bonus via PlayerScript hook (checks HasAura of this spell)
#                     
#                     NOTE: Use ONLY ONE spell ID for both effects to avoid conflicts!
#                     Using Arcane Intellect (42995) as AuraSpell + 800001 as BuffSpell will cause
#                     interference. Instead, just use 800001 for both.
#        Default:     800001 (Custom Hotspot XP Buff)

Hotspots.BuffSpell = 800001

#
#    Hotspots.MinimapIcon
#        Description: Minimap icon type (0=none, 1=golden arrow, 2=green cross)
#        Default:     1

Hotspots.MinimapIcon = 1

#
#    Hotspots.AnnounceRadius
#        Description: Distance at which players see minimap/map markers (in yards)
#        Default:     500.0

Hotspots.AnnounceRadius = 500.0

#
#    Hotspots.EnabledMaps
#        Description: List of map IDs where hotspots can spawn (comma-separated)
#                     0 = Eastern Kingdoms
#                     1 = Kalimdor
#                     530 = Outland
#                     571 = Northrend
#        Default:     "0,1,530,571"

Hotspots.EnabledMaps = "0,1,530,571"

#
#    Hotspots.EnabledZones
#        Description: List of zone IDs where hotspots can spawn (comma-separated)
#                     Leave empty to allow all zones in enabled maps
#                     Example: "1,3,4,8,10,11,12,14,15,17"
#        Default:     "" (All zones in enabled maps)

Hotspots.EnabledZones = ""

#
#    Hotspots.ExcludedZones
#        Description: List of zone IDs where hotspots should NOT spawn (comma-separated)
#                     Example: "1377,3430,3433" (Silithus, Eversong Woods, Ghostlands)
#        Default:     ""

Hotspots.ExcludedZones = ""

#
#    Hotspots.EnabledZonesPerMap
#        Description: Per-map list of enabled zone IDs. Overrides Hotspots.EnabledZones/ExcludedZones when present.
#                     Format: "mapId:zone,zone;mapId:zone,zone" (multiple map entries separated by ';')
#                     Zone ID 0 means "all zones" for that map.
#                     Examples:
#                        # Allow all zones for map 1, and only zone 268 on map 37
#                        Hotspots.EnabledZonesPerMap = "1:0;37:268"
#                        # Allow only zones 141 and 331 for map 1, and 268 for map 37
#                        Hotspots.EnabledZonesPerMap = "1:141,331;37:268"
#        Default:     "" (use global Hotspots.EnabledZones / Hotspots.ExcludedZones)

Hotspots.EnabledZonesPerMap = "1:0;37:268"

#
#    Hotspots.AnnounceSpawn
#        Description: Announce in world chat when a hotspot spawns
#        Default:     1 (Enabled)
#                     0 (Disabled)

Hotspots.AnnounceSpawn = 1

#
#    Hotspots.AnnounceExpire
#        Description: Announce in world chat when a hotspot expires
#        Default:     1 (Enabled)
#                     0 (Disabled)

Hotspots.AnnounceExpire = 1

#
#    Hotspots.SpawnVisualMarker
#        Description: Spawn a GameObject marker at hotspot locations (visible on map/minimap)
#        Default:     1 (Enabled)
#                     0 (Disabled)

Hotspots.SpawnVisualMarker = 1

#
#    Hotspots.MarkerGameObjectEntry
#        Description: GameObject entry ID to use as visual marker
#                     179976 = Alliance Flag (shows on map with flag icon)
#                     179964 = Horde Flag (shows on map with flag icon)
#                     180746 = Thunderbrew Ale Keg (barrel icon on map)
#                     Note: Different GameObjects have different map display properties
#        Default:     179976 (Alliance Flag)

Hotspots.MarkerGameObjectEntry = 179976

#
#    Hotspots.ClientDataPath
#        Description: Path to the game client data root used for optional ADT/WDT parsing
#                     The script will look for the "World/Maps/" layout inside this path.
#                     Examples:
#                        Hotspots.ClientDataPath = "C:/Program Files/WoW/client"
#                        Hotspots.ClientDataPath = "/home/user/wow/"
#                     If empty or missing, ADT/WDT parsing is skipped and the script
#                     will rely on DB/CSV map bounds (dc_map_bounds or var/map_bounds.csv).
#        Default:     "Data"

Hotspots.ClientDataPath = "Data"

#
# IMPORTANT NOTES:
#
# For "XP+" text display on the map (like Project Ascension):
#   - Requires a custom CLIENT ADDON to read hotspot data and display text overlays on map
#   - Server provides: GameObject markers, buff auras, world announcements
#   - Client addon would: Query hotspot locations, draw "XP+" text on map interface
#   - Example addon frameworks: LibMapData, HereBeDragons for WoW 3.3.5a
#
# Without client addon, players will see:
#   - GameObject marker on map/minimap (flag, barrel, or other configured object)
#   - Cloud aura visual when entering hotspot
#   - Flag buff icon in buff bar while in hotspot
#   - World chat announcements about hotspot locations
#

